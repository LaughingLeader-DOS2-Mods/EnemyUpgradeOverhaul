Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLENEMY_Mechanics_Statuses_InitSettings();

KBSECTION
//REGION SETTINGS
PROC
LLENEMY_Mechanics_Statuses_InitSettings()
THEN
DB_LLENEMY_Statuses_Rage(1, "LLENEMY_RAGE", 0, 20);
DB_LLENEMY_Statuses_Rage(2, "LLENEMY_RAGE2", 20, 40);
DB_LLENEMY_Statuses_Rage(3, "LLENEMY_RAGE3", 40, 60);
DB_LLENEMY_Statuses_Rage(4, "LLENEMY_RAGE4", 60, 80);
DB_LLENEMY_Statuses_Rage(5, "LLENEMY_RAGE5", 80, 999);
//END_REGION

//REGION INCREASE_RAGE
PROC
LLENEMY_Mechanics_Statuses_IncreaseRage((CHARACTERGUID)_Char, (INTEGER)_DamagePercentageInt, (GUIDSTRING)_Source)
AND
Real(_DamagePercentageInt, _DamagePercentage)
AND
RealProduct(_DamagePercentage, 0.8888, _RageR)
AND
RealMax(_RageR, 1.0, _ClampedRageR)
AND
Integer(_ClampedRageR, _AddRage)
THEN
LeaderLib_Variables_DB_ModifyVariableInt(_Char, "LLENEMY_Rage", _AddRage, 100, 0);

PROC
LeaderLib_Variables_OnVariableIntChanged((GUIDSTRING)_Char, "LLENEMY_Rage", (INTEGER)_LastValue, (INTEGER)_CurrentValue, (GUIDSTRING)_Source)
THEN
LeaderLib_Timers_StartObjectTimer(_Char, 250, "Timers_LLENEMY_Rage_ApplyRageStatus", "LLENEMY_Rage_ApplyRageStatus");

IF
StoryEvent((CHARACTERGUID)_Char, "LLENEMY_Rage_ApplyRageStatus")
THEN
LLENEMY_Mechanics_Statuses_ApplyRageStatus(_Char);

PROC
LLENEMY_Mechanics_Statuses_ApplyRageStatus((CHARACTERGUID)_Char)
AND
DB_LeaderLib_Variables_Integer((GUIDSTRING)_Char, "LLENEMY_Rage", _CurrentValue, _LastSource)
AND
DB_LLENEMY_Statuses_Rage(_Index, _Status, _Min, _Max)
AND
NOT DB_LLENEMY_Mechanics_Statuses_AppliedRage((CHARACTERGUID)_Char)
AND
_CurrentValue >= _Min
AND
_CurrentValue < _Max
AND
NOT LeaderLib_Helper_QRY_HasStatus(_Char, _Status)
AND
HasActiveStatus(_Char, "SLEEPING", _IsSleeping)
THEN
DB_LLENEMY_Mechanics_Statuses_AppliedRage(_Char);
LeaderLog_Log("DEBUG", "[LLENEMY_05_Mechanics_Statuses:LLENEMY_Rage] Applying rage status (",_Status,")");
ApplyStatus(_Char, _Status, -1.0, 1, _Char);
LLENEMY_Mechanics_Statuses_Internal_PlayRageEffect((CHARACTERGUID)_Char, _IsSleeping);

PROC
LLENEMY_Mechanics_Statuses_ApplyRageStatus((CHARACTERGUID)_Char)
AND
DB_LLENEMY_Mechanics_Statuses_AppliedRage(_Char)
THEN
NOT DB_LLENEMY_Mechanics_Statuses_AppliedRage(_Char);

PROC
LLENEMY_Mechanics_Statuses_Internal_PlayRageEffect((CHARACTERGUID)_Char, 0)
AND
LeaderLib_Helper_QRY_CharacterIsHumanoid(_Char)
THEN
PlayEffect(_Char, "LLENEMY_FX_Status_Rage_Applied_01", "Dummy_BodyFX");

PROC
LLENEMY_Mechanics_Statuses_Internal_PlayRageEffect((CHARACTERGUID)_Char, 0)
AND
NOT LeaderLib_Helper_QRY_CharacterIsHumanoid(_Char)
THEN
PlayEffect(_Char, "LLENEMY_FX_Status_Rage_Applied_01", "Dummy_OverheadFX");
//END_REGION

//REGION DECREASE_RAGE
//From Sleeping
PROC
LLENEMY_Mechanics_Statuses_LowerRage((CHARACTERGUID)_Char, (GUIDSTRING)_Source)
AND
NOT LeaderLib_Variables_DB_QRY_IntegerVariableIsLessThanOrEqualTo(_Char, "LLENEMY_Rage", 0)
AND
DB_LLENEMY_Statuses_Rage(_Index, _Status, _Min, _Max)
AND
NOT DB_LLENEMY_Mechanics_Statuses_RageLowered(_Char)
AND
HasActiveStatus(_Char, _Status, 1)
AND
IntegerSubtract(_Index, 1, _Previous)
AND
DB_LLENEMY_Statuses_Rage(_Previous, _NextStatus, _NextMin, _NextMax)
THEN
DB_LLENEMY_Mechanics_Statuses_RageLowered(_Char);
LeaderLog_LogInt("DEBUG", "[LLENEMY_05_Mechanics_Statuses:LowerRage] Lowering rage to (",_NextMin,")");
LeaderLib_Variables_DB_SetVariableInt(_Char, "LLENEMY_Rage", _NextMin, _Source);
CharacterStatusText(_Char, "LLENEMY_StatusText_RageReduced");

PROC
LLENEMY_Mechanics_Statuses_LowerRage((CHARACTERGUID)_Char, (GUIDSTRING)_Source)
AND
DB_LLENEMY_Mechanics_Statuses_RageLowered(_Char)
THEN
NOT DB_LLENEMY_Mechanics_Statuses_RageLowered(_Char);
//END_REGION

//REGION RAGE_TS
IF
CharacterStatusApplied(_Char, "LLENEMY_RAGE", _)
AND
NOT LeaderLib_Variables_DB_QRY_IntegerVariableSet(_Char, "LLENEMY_Rage")
THEN
LeaderLib_Variables_DB_SetVariableInt(_Char, "LLENEMY_Rage", 1);

IF
CharacterStatusApplied(_Char, "LLENEMY_RAGE", _)
THEN
LeaderLib_ToggleScripts_EnableScriptForObject(_Char, "LLENEMY_Rage_Active", "EnemyUpgradeOverhaul");

IF
CharacterStatusApplied(_Char, "LLENEMY_RAGE2", _)
AND
NOT LeaderLib_ToggleScripts_QRY_ScriptIsEnabled(_Char, "LLENEMY_Rage_Active")
AND
DB_LLENEMY_Statuses_Rage(_Index, "LLENEMY_RAGE2", _Min, _Max)
THEN
LeaderLib_Variables_DB_SetVariableInt(_Char, "LLENEMY_Rage", _Min);
LeaderLib_ToggleScripts_EnableScriptForObject(_Char, "LLENEMY_Rage_Active", "EnemyUpgradeOverhaul");

IF
CharacterStatusApplied(_Char, "LLENEMY_RAGE3", _)
AND
NOT LeaderLib_ToggleScripts_QRY_ScriptIsEnabled(_Char, "LLENEMY_Rage_Active")
AND
DB_LLENEMY_Statuses_Rage(_Index, "LLENEMY_RAGE3", _Min, _Max)
THEN
LeaderLib_Variables_DB_SetVariableInt(_Char, "LLENEMY_Rage", _Min);
LeaderLib_ToggleScripts_EnableScriptForObject(_Char, "LLENEMY_Rage_Active", "EnemyUpgradeOverhaul");

IF
CharacterStatusApplied(_Char, "LLENEMY_RAGE4", _)
AND
NOT LeaderLib_ToggleScripts_QRY_ScriptIsEnabled(_Char, "LLENEMY_Rage_Active")
AND
DB_LLENEMY_Statuses_Rage(_Index, "LLENEMY_RAGE4", _Min, _Max)
THEN
LeaderLib_Variables_DB_SetVariableInt(_Char, "LLENEMY_Rage", _Min);
LeaderLib_ToggleScripts_EnableScriptForObject(_Char, "LLENEMY_Rage_Active", "EnemyUpgradeOverhaul");

IF
CharacterStatusApplied(_Char, "LLENEMY_RAGE5", _)
AND
NOT LeaderLib_ToggleScripts_QRY_ScriptIsEnabled(_Char, "LLENEMY_Rage_Active")
AND
DB_LLENEMY_Statuses_Rage(_Index, "LLENEMY_RAGE5", _Min, _Max)
THEN
LeaderLib_Variables_DB_SetVariableInt(_Char, "LLENEMY_Rage", _Min);
LeaderLib_ToggleScripts_EnableScriptForObject(_Char, "LLENEMY_Rage_Active", "EnemyUpgradeOverhaul");
//END_REGION

//REGION GATHERING_POWER_EMPOWERED
/* [OSITOOLS_ONLY]
QRY
LLENEMY_Upgrades_QRY_ApplyStatus((CHARACTERGUID)_Character, (STRING)_Group, (STRING)_Type, "LLENEMY_GATHERING_POWER", (REAL)_Duration, 1)
AND
NRD_RandomReal(6.0, 18.0, _Ran)
AND
RealSum(_Ran, 0.5, _RanMod) // Helps with rounding
AND
NRD_Round(_RanMod, _RanRounded)
THEN
ApplyStatus(_Character, "LLENEMY_GATHERING_POWER", _RanRounded, 1, _Character);
*/

// [BEGIN_NO_OSITOOLS]
QRY
LLENEMY_Upgrades_QRY_ApplyStatus((CHARACTERGUID)_Character, (STRING)_Group, (STRING)_Type, "LLENEMY_GATHERING_POWER", (REAL)_Duration, (INTEGER)_IsHardMode)
AND
_Duration > 0.0
AND
LeaderLib_Random_QRY(6,18)
AND
DB_LeaderLib_Random(_RanInt)
AND
Real(_RanInt, _Ran)
AND
RealSum(_Duration, _Ran, _NewDuration)
THEN
ApplyStatus(_Character, "LLENEMY_GATHERING_POWER", _NewDuration, 1, _Character);
// [END_NO_OSITOOLS]

QRY
LLENEMY_Upgrades_QRY_ApplyStatus((CHARACTERGUID)_Character, (STRING)_Group, (STRING)_Type, "LLENEMY_GATHERING_POWER", (REAL)_Duration, 0)
THEN
ApplyStatus(_Character, "LLENEMY_GATHERING_POWER", _Duration, 1, _Character);

IF
CharacterStatusRemoved(_Character, "LLENEMY_GATHERING_POWER", _)
AND
CharacterIsDead(_Character, 0)
THEN
ApplyStatus(_Character, "LLENEMY_EMPOWERED", -1.0, 1, _Character);
LLENEMY_Upgrades_IncreaseChallengePoints(_Character, 10);
//END_REGION
EXITSECTION
ENDEXITSECTION
ParentTargetEdge "LaughingLeader_EnemyUpgradeOverhaul"