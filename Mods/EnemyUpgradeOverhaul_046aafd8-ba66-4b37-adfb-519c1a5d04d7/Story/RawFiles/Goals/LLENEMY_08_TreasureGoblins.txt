Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION
//REGION SPAWNING
IF
CombatStarted(_CombatID)
AND
NOT DB_CurrentLevel("TUT_Tutorial_A")
AND
LeaderLib_Combat_QRY_HasInvolvedPlayer(_CombatID)
AND
LLENEMY_TreasureGoblins_QRY_CanRoll()
THEN
LLENEMY_TreasureGoblins_Internal_RollForSpawn(_CombatID);

QRY
LLENEMY_TreasureGoblins_QRY_CanRoll()
AND
DB_LLENEMY_TreasureGoblins_WaitCounter(_Last)
AND
IntegerSubtract(_Last, 1, _Next)
THEN
NOT DB_LLENEMY_TreasureGoblins_WaitCounter(_Last);
DB_LLENEMY_TreasureGoblins_WaitCounter(_Next);

QRY
LLENEMY_TreasureGoblins_QRY_CanRoll()
AND
DB_LLENEMY_TreasureGoblins_WaitCounter(0)
THEN
NOT DB_LLENEMY_TreasureGoblins_WaitCounter(0);

QRY
LLENEMY_TreasureGoblins_QRY_CanRoll()
AND
NOT DB_LLENEMY_TreasureGoblins_WaitCounter(_)
THEN
DB_NOOP(1);

PROC
LLENEMY_TreasureGoblins_Internal_RollForSpawn((INTEGER)_CombatID)
AND
NOT DB_LLENEMY_TreasureGoblins_Temp_Active(_)
AND
LeaderLib_Roll_QRY(10,999)
AND
LeaderLib_Random_QRY(4,12)
AND
DB_LeaderLib_Random(_CombatsUntilNextRoll)
THEN
NOT DB_LeaderLib_Random(_CombatsUntilNextRoll);
DB_LLENEMY_TreasureGoblins_WaitCounter(_CombatsUntilNextRoll);
LLENEMY_TreasureGoblins_Spawn(_CombatID);

PROC
LLENEMY_TreasureGoblins_Internal_RollForSpawn((INTEGER)_CombatID)
AND
NOT DB_LLENEMY_TreasureGoblins_Temp_Active(_)
THEN
LLENEMY_TreasureGoblins_Internal_IncreaseFailures(_CombatID);

PROC
LLENEMY_TreasureGoblins_Internal_IncreaseFailures((INTEGER)_CombatID)
AND
NOT DB_LLENEMY_Temp_TreasureGoblinRollFailures(_)
THEN
DB_LLENEMY_Temp_TreasureGoblinRollFailures(0);

PROC
LLENEMY_TreasureGoblins_Internal_IncreaseFailures((INTEGER)_CombatID)
AND
DB_LLENEMY_Temp_TreasureGoblinRollFailures(_Last)
AND
IntegerSum(_Last, 1, _Next)
THEN
NOT DB_LLENEMY_Temp_TreasureGoblinRollFailures(_Last);
DB_LLENEMY_Temp_TreasureGoblinRollFailures(_Next);
LeaderLog_LogInt("DEBUG", "[LLENEMY_08_TreasureGoblins:IncreaseFailures] Treasure Goblin roll attempts: (", _Last, " => ", _Next, ")");

PROC
LLENEMY_TreasureGoblins_Internal_IncreaseFailures((INTEGER)_CombatID)
AND
DB_LLENEMY_Temp_TreasureGoblinRollFailures(_TotalFailures)
AND
_TotalFailures >= 12
THEN
NOT DB_LLENEMY_Temp_TreasureGoblinRollFailures(_TotalFailures);
LLENEMY_TreasureGoblins_Spawn(_CombatID);

PROC
LLENEMY_TreasureGoblins_Spawn((INTEGER)_CombatID)
AND
LeaderLib_Combat_QRY_GetRandomCharacter(_CombatID)
AND
DB_LeaderLib_Combat_Temp_RandomCharacter(_CombatID, _SpawnNear, _Index)
AND
GetPosition(_SpawnNear, _cx, _cy, _cz)
AND
FindValidPosition(_cx, _cy, _cz, 12.0, _SpawnNear, _x, _y, _z)
THEN
NOT DB_LeaderLib_Combat_Temp_RandomCharacter(_CombatID, _SpawnNear, _Index);
LLENEMY_TreasureGoblins_Internal_Spawn(_x, _y, _z);

PROC
LLENEMY_TreasureGoblins_Internal_Spawn((REAL)_x, (REAL)_y, (REAL)_z)
THEN
LLENEMY_TreasureGoblins_Internal_Spawn(_x, _y, _z, -1);

PROC
LLENEMY_TreasureGoblins_Internal_Spawn((REAL)_x, (REAL)_y, (REAL)_z, (INTEGER)_CombatID)
AND
LeaderLib_Helper_QRY_GetHighestPlayerLevel()
AND
DB_LeaderLib_Helper_Temp_HighestPlayerLevel(_Level)
AND
TemporaryCharacterCreateAtPosition(_x, _y, _z, "LLENEMY_TreasureGoblin_A_444e50a0-e59b-4866-b548-49a0197a0de1", 1, _Goblin)
THEN
NOT DB_LeaderLib_Helper_Temp_HighestPlayerLevel(_Level);
CharacterLevelUpTo(_Goblin, _Level);
DB_LLENEMY_TreasureGoblins_Temp_Active(_Goblin);
LeaderLib_Helper_MakeHostileToPlayers(_Goblin);
LLENEMY_TreasureGoblins_Internal_OnGoblinSpawned(_Goblin, _CombatID);
LLENEMY_Rewards_TreasureGoblin_ToggleScript(1);

PROC
LLENEMY_TreasureGoblins_Internal_OnGoblinSpawned((CHARACTERGUID)_Goblin, (INTEGER)_CombatID)
AND
CharacterIsInCombat(_Goblin, 0)
AND
_CombatID > -1
AND
DB_CombatCharacters(_Player, _CombatID)
AND
DB_IsPlayer(_Player)
AND
CharacterIsInCombat(_Goblin, 0)
THEN
EnterCombat(_Goblin, _Player);
//END_REGION

//REGION TREASURE_DROPPING
PROC
LeaderLib_Variables_OnVariableIntChanged((GUIDSTRING)_Goblin, "LLENEMY_TreasureGoblin_TotalHits", (INTEGER)_LastValue, (INTEGER)_CurrentValue)
AND
NOT GetVarInteger(_Goblin, "LLENEMY_TreasureGoblin_Defeated", 1)
AND
_CurrentValue > _LastValue
THEN
LeaderLib_Timers_StartObjectTimer(_Goblin, 250, "Timers_LLENEMY_TreasureGoblins_SpawnLoot", "LLENEMY_TreasureGoblins_SpawnLoot");

IF
StoryEvent((CHARACTERGUID)_Goblin, "LLENEMY_TreasureGoblins_SpawnLoot")
AND
NOT GetVarInteger(_Goblin, "LLENEMY_TreasureGoblin_Defeated", 1)
AND
CharacterGetLevel(_Goblin, _Level)
AND
GetPosition(_Goblin, _x, _y, _z)
THEN
LLENEMY_TreasureGoblins_SpawnLoot(_Goblin, _x, _y, _z, _Level);

PROC
LLENEMY_TreasureGoblins_SpawnLoot((CHARACTERGUID)_Goblin, (REAL)_x, (REAL)_y, (REAL)_z, (INTEGER)_Level)
AND
GetUUID(_Goblin, _UUID)
THEN
LeaderLog_LogInt("DEBUG", "[LLENEMY_08_TreasureGoblins:SpawnLoot] Spawning loot at level ", _Level, "");
//GenerateTreasure(_Bag, "LLENEMY_TreasureGoblin_A", _Level, _Host);
CharacterGiveReward(_Goblin, "LLENEMY_TreasureGoblin_A", 1);
// [BEGIN_NO_OSITOOLS]
InventoryLaunchIterator(_Goblin, "LLENEMY_TreasureGoblins_TreasureFound", "");
// [END_NO_OSITOOLS]
/* [OSITOOLS_ONLY]
NRD_LuaCall("LLENEMY_Ext_ScatterInventory", _UUID);
*/

IF
StoryEvent((ITEMGUID)_Item, "LLENEMY_TreasureGoblins_TreasureFound")
AND
String(_Item, _ItemStr)
THEN
LeaderLog_Log("DEBUG", "[LLENEMY_08_TreasureGoblins:TreasureFound] Found item: ", _ItemStr);

IF
StoryEvent((ITEMGUID)_Item, "LLENEMY_TreasureGoblins_TreasureFound")
AND
GetInventoryOwner(_Item, (CHARACTERGUID)_Goblin)
AND
NOT LeaderLib_Helper_QRY_ItemIsEquipped(_Goblin, _Item)
AND
GetPosition(_Goblin, _x, _y, _z)
AND
String(_Item, _ItemStr)
THEN
LeaderLog_Log("DEBUG", "[LLENEMY_08_TreasureGoblins:TreasureFound] Scatter item at goblin position ", _ItemStr);
ItemDrop(_Item);
ItemScatterAt(_Item, _x, _y, _z);

IF
StoryEvent((ITEMGUID)_Item, "LLENEMY_TreasureGoblins_TreasureFound")
AND
NOT GetInventoryOwner(_Item, _)
AND
String(_Item, _ItemStr)
THEN
LeaderLog_Log("DEBUG", "[LLENEMY_08_TreasureGoblins:TreasureFound] No inventory owner for item: ", _ItemStr);

IF
StoryEvent((ITEMGUID)_Item, "LLENEMY_TreasureGoblins_TreasureFound")
AND
GetInventoryOwner(_Item, _Goblin)
AND
NOT GetPosition(_Goblin, _, _, _)
AND
String(_Item, _ItemStr)
AND
String(_Goblin, _GoblinStr)
THEN
LeaderLog_Log("DEBUG", "[LLENEMY_08_TreasureGoblins:TreasureFound] Get position failed for goblin owner ", _GoblinStr, " with item ", _ItemStr);

/* [OSITOOLS_ONLY]
IF
StoryEvent((ITEMGUID)_Item, "LLENEMY_TreasureGoblins_TreasureFound")
THEN
NRD_LuaCall("LLENEMY_Ext_Debug_TraceItemOwnership", (STRING)_Item);
*/

IF
StoryEvent((ITEMGUID)_Item, "LLENEMY_TreasureGoblins_TreasureFound")
AND
GetTemplate(_Item, _Template)
AND
StringContains(_Template, "Gold", 0)
AND
ItemGetGoldValue(_Item, _Value)
AND
_Value >= 250
THEN
PlayEffect(_Item, "LLENEMY_FX_TreasureGoblins_Loot_Dropped_01");
//END_REGION

//REGION DEFEATED
// [BEGIN_NO_OSITOOLS]
IF
StoryEvent((CHARACTERGUID)_Goblin, "LLENEMY_TreasureGoblins_Defeated")
AND
NOT DB_LLENEMY_Rewards_Temp_DefeatedGoblin(_Goblin, _, _, _, _, _)
AND
GetVarInteger(_Goblin, "LLENEMY_TreasureGoblin_MaxTotalHits", _MaxTotalHits)
AND
GetVarInteger(_Goblin, "LLENEMY_TreasureGoblin_TotalHits", _TotalHits)
AND
IntegerSubtract(_MaxTotalHits, _MaxTotalHits, _RemainingHits)
AND
_RemainingHits > 0
AND
GetPosition(_Goblin, _x, _y, _z)
AND
CharacterGetLevel(_Goblin, _Level)
AND
CreateItemTemplateAtPosition("CONT_LLENEMY_Bag_TreasureGoblinSack_A_2b7888b9-833c-4443-b4b5-cc372b95b459", _x, _y, _z, _Bag)
THEN
DB_LLENEMY_Rewards_Temp_DefeatedGoblin(_Goblin, _Bag, _Level, _RemainingHits);
PlayEffect(_Bag,"RS3_FX_Skills_Void_Netherswap_Reappear_01");
LeaderLog_LogInt("DEBUG", "[LLENEMY_08_TreasureGoblins:Defeated] Goblin was defeated. Dumping loot for ", _RemainingHits, " hits.");
LeaderLib_Timers_StartObjectTimer(_Goblin, 25, "Timers_LLENEMY_TreasureGoblins_SpawnDefeatedLoot", "LLENEMY_TreasureGoblins_SpawnDefeatedLoot");

IF
StoryEvent((CHARACTERGUID)_Goblin, "LLENEMY_TreasureGoblins_SpawnDefeatedLoot")
AND
DB_LLENEMY_Rewards_Temp_DefeatedGoblin(_Goblin, _Bag, _Level, _TotalHits)
AND
_TotalHits > 0
AND
IntegerSubtract(_TotalHits, 1, _Next)
THEN
NOT DB_LLENEMY_Rewards_Temp_DefeatedGoblin(_Goblin, _Bag, _Level, _TotalHits);
DB_LLENEMY_Rewards_Temp_DefeatedGoblin(_Goblin, _Bag, _Level, _Next);
GenerateTreasure(_Bag, "LLENEMY_TreasureGoblin_A", _Level, _Goblin);
LeaderLib_Timers_StartObjectTimer(_Goblin, 25, "Timers_LLENEMY_TreasureGoblins_SpawnDefeatedLoot", "LLENEMY_TreasureGoblins_SpawnDefeatedLoot");

IF
StoryEvent((CHARACTERGUID)_Goblin, "LLENEMY_TreasureGoblins_SpawnDefeatedLoot")
AND
DB_LLENEMY_Rewards_Temp_DefeatedGoblin(_Goblin, _Bag, _Level, _TotalHits)
AND
_TotalHits <= 0
THEN
NOT DB_LLENEMY_Rewards_Temp_DefeatedGoblin(_Goblin, _Bag, _Level, _TotalHits);
// [END_NO_OSITOOLS]

/* [OSITOOLS_ONLY]
IF
StoryEvent((CHARACTERGUID)_Goblin, "LLENEMY_TreasureGoblins_Defeated")
THEN
NRD_LuaCall("LLENEMY_Ext_TreasureGoblinDefeated", (STRING)_Goblin);
*/
//END_REGION

//REGION TOGGLING_SCRIPT
PROC
LLENEMY_Rewards_TreasureGoblin_ToggleScript(1)
AND
NOT LeaderLib_ToggleScripts_QRY_ScriptIsEnabled("LLENEMY_TreasureGoblin_Active")
THEN
LeaderLib_ToggleScripts_EnableScript("LLENEMY_TreasureGoblin_Active", "EnemyUpgradeOverhaul");

PROC
LLENEMY_Rewards_TreasureGoblin_ToggleScript(0)
AND
NOT DB_LLENEMY_TreasureGoblins_Temp_Active(_)
THEN
LeaderLib_ToggleScripts_DisableScript("LLENEMY_TreasureGoblin_Active", "EnemyUpgradeOverhaul");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_EnemyUpgradeOverhaul"
