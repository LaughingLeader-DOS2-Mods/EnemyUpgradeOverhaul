Version 1
SubGoalCombiner SGC_AND
INITSECTION
KBSECTION
//REGION SPAWNING
IF
CombatStarted(_CombatID)
AND
NOT DB_CurrentLevel("TUT_Tutorial_A")
AND
LeaderLib_Combat_QRY_HasInvolvedPlayer(_CombatID)
AND
LLENEMY_TreasureGoblins_QRY_CanRoll()
THEN
LLENEMY_TreasureGoblins_Internal_RollForSpawn(_CombatID);

QRY
LLENEMY_TreasureGoblins_QRY_CanRoll()
AND
DB_LLENEMY_TreasureGoblins_WaitCounter(_Last)
AND
IntegerSubtract(_Last, 1, _Next)
THEN
NOT DB_LLENEMY_TreasureGoblins_WaitCounter(_Last);
DB_LLENEMY_TreasureGoblins_WaitCounter(_Next);

QRY
LLENEMY_TreasureGoblins_QRY_CanRoll()
AND
DB_LLENEMY_TreasureGoblins_WaitCounter(0)
THEN
NOT DB_LLENEMY_TreasureGoblins_WaitCounter(0);

QRY
LLENEMY_TreasureGoblins_QRY_CanRoll()
AND
NOT DB_LLENEMY_TreasureGoblins_WaitCounter(_)
THEN
DB_NOOP(1);

PROC
LLENEMY_TreasureGoblins_Internal_RollForSpawn((INTEGER)_CombatID)
AND
NOT DB_LLENEMY_TreasureGoblins_Temp_Active(_)
AND
LeaderLib_Roll_QRY(10,999)
AND
LeaderLib_Random_QRY(4,12)
AND
DB_LeaderLib_Random(_CombatsUntilNextRoll)
THEN
NOT DB_LeaderLib_Random(_CombatsUntilNextRoll);
DB_LLENEMY_TreasureGoblins_WaitCounter(_CombatsUntilNextRoll);
LLENEMY_TreasureGoblins_Spawn(_CombatID);

PROC
LLENEMY_TreasureGoblins_Internal_RollForSpawn((INTEGER)_CombatID)
AND
NOT DB_LLENEMY_TreasureGoblins_Temp_Active(_)
THEN
LLENEMY_TreasureGoblins_Internal_IncreaseFailures(_CombatID);

PROC
LLENEMY_TreasureGoblins_Internal_IncreaseFailures((INTEGER)_CombatID)
AND
NOT DB_LLENEMY_Temp_TreasureGoblinRollFailures(_)
THEN
DB_LLENEMY_Temp_TreasureGoblinRollFailures(0);

PROC
LLENEMY_TreasureGoblins_Internal_IncreaseFailures((INTEGER)_CombatID)
AND
DB_LLENEMY_Temp_TreasureGoblinRollFailures(_Last)
AND
IntegerSum(_Last, 1, _Next)
THEN
NOT DB_LLENEMY_Temp_TreasureGoblinRollFailures(_Last);
DB_LLENEMY_Temp_TreasureGoblinRollFailures(_Next);
LeaderLog_LogInt("DEBUG", "[LLENEMY_08_TreasureGoblins:IncreaseFailures] Treasure Goblin roll attempts: (", _Last, " => ", _Next, ")");

PROC
LLENEMY_TreasureGoblins_Internal_IncreaseFailures((INTEGER)_CombatID)
AND
DB_LLENEMY_Temp_TreasureGoblinRollFailures(_TotalFailures)
AND
_TotalFailures >= 12
THEN
NOT DB_LLENEMY_Temp_TreasureGoblinRollFailures(_TotalFailures);
LLENEMY_TreasureGoblins_Spawn(_CombatID);

PROC
LLENEMY_TreasureGoblins_Spawn((INTEGER)_CombatID)
AND
LeaderLib_Combat_QRY_GetRandomCharacter(_CombatID)
AND
DB_LeaderLib_Combat_Temp_RandomCharacter(_CombatID, _SpawnNear, _Index)
AND
GetPosition(_SpawnNear, _cx, _cy, _cz)
AND
FindValidPosition(_cx, _cy, _cz, 12.0, _SpawnNear, _x, _y, _z)
THEN
NOT DB_LeaderLib_Combat_Temp_RandomCharacter(_CombatID, _SpawnNear, _Index);
LLENEMY_TreasureGoblins_Internal_Spawn(_x, _y, _z);

PROC
LLENEMY_TreasureGoblins_Internal_Spawn((REAL)_x, (REAL)_y, (REAL)_z)
AND
LeaderLib_Helper_QRY_GetHighestPlayerLevel()
AND
DB_LeaderLib_Helper_Temp_HighestPlayerLevel(_Level)
AND
TemporaryCharacterCreateAtPosition(_x, _y, _z, "LLENEMY_TreasureGoblin_A_444e50a0-e59b-4866-b548-49a0197a0de1", 1, _Goblin)
THEN
NOT DB_LeaderLib_Helper_Temp_HighestPlayerLevel(_Level);
CharacterLevelUpTo(_Goblin, _Level);
DB_LLENEMY_TreasureGoblins_Temp_Active(_Goblin);
LeaderLib_Helper_MakeHostileToPlayers(_Goblin);
LLENEMY_Rewards_TreasureGoblin_ToggleScript(1);
//END_REGION

//REGION TREASURE_DROPPING
PROC
LeaderLib_Variables_OnVariableIntChanged((GUIDSTRING)_Goblin, "LLENEMY_TreasureGoblin_TotalHits", (INTEGER)_LastValue, (INTEGER)_CurrentValue)
AND
_CurrentValue > _LastValue
THEN
LeaderLib_Timers_StartObjectTimer(_Goblin, 250, "Timers_LLENEMY_TreasureGoblins_SpawnLoot", "LLENEMY_TreasureGoblins_SpawnLoot");

IF
StoryEvent((CHARACTERGUID)_Goblin, "LLENEMY_TreasureGoblins_SpawnLoot")
AND
CharacterGetLevel(_Goblin, _Level)
AND
GetPosition(_Goblin, _x, _y, _z)
THEN
LLENEMY_TreasureGoblins_SpawnLoot(_Goblin, _x, _y, _z, _Level);

PROC
LLENEMY_TreasureGoblins_SpawnLoot((CHARACTERGUID)_Source, (REAL)_x, (REAL)_y, (REAL)_z, (INTEGER)_Level)
AND
CreateItemTemplateAtPosition("LOOT_LeaderLib_BackPack_Invisible_98fa7688-0810-4113-ba94-9a8c8463f830", _x, _y, _z, _Bag)
THEN
//LeaderLog_LogInt("DEBUG", "[LLENEMY_08_TreasureGoblins:SpawnLoot] Spawning loot at Goblin position at level ", _Level, "");
GenerateTreasure(_Bag, "LLENEMY_TreasureGoblin_A", _Level, _Source);
ContainerIdentifyAll(_Bag);
InventoryLaunchIterator(_Bag, "LLENEMY_TreasureGoblins_TreasureFound", "");
LeaderLib_Timers_StartObjectTimer(_Bag, 250, "Timers_LeaderLib_Commands_RemoveItem", "LeaderLib_Commands_RemoveItem");

IF
StoryEvent((ITEMGUID)_Item, "LLENEMY_TreasureGoblins_TreasureFound")
AND
GetInventoryOwner(_Item, _Bag)
AND
GetPosition(_Bag, _x, _y, _z)
THEN
ItemScatterAt(_Item, _x, _y, _z);

IF
StoryEvent((ITEMGUID)_Item, "LLENEMY_TreasureGoblins_TreasureFound")
AND
GetTemplate(_Item, _Template)
AND
StringContains(_Template, "Gold", 0)
AND
ItemGetGoldValue(_Item, _Value)
AND
_Value >= 250
THEN
PlayEffect(_Item, "LLENEMY_FX_TreasureGoblins_Loot_Dropped_01");
//END_REGION

//REGION DEFEATED
IF
StoryEvent((CHARACTERGUID)_Goblin, "LLENEMY_TreasureGoblins_Defeated")
AND
NOT DB_LLENEMY_Rewards_Temp_DefeatedGoblin(_Goblin, _, _, _, _, _)
AND
GetVarInteger(_Goblin, "LLENEMY_TreasureGoblin_MaxTotalHits", _MaxTotalHits)
AND
GetVarInteger(_Goblin, "LLENEMY_TreasureGoblin_TotalHits", _TotalHits)
AND
IntegerSubtract(_MaxTotalHits, _MaxTotalHits, _RemainingHits)
AND
_RemainingHits > 0
AND
GetPosition(_Goblin, _x, _y, _z)
AND
CharacterGetLevel(_Goblin, _Level)
THEN
DB_LLENEMY_Rewards_Temp_DefeatedGoblin(_Goblin, _x, _y, _z, _Level, _RemainingHits);
LeaderLog_LogInt("DEBUG", "[LLENEMY_08_TreasureGoblins:Defeated] Goblin was defeated. Dumping loot for ", _RemainingHits, " hits.");
ProcObjectTimer(_Goblin, "Timers_LLENEMY_TreasureGoblins_SpawnDefeatedLoot", 25);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Goblin, "Timers_LLENEMY_TreasureGoblins_SpawnDefeatedLoot")
AND
DB_LLENEMY_Rewards_Temp_DefeatedGoblin(_Goblin, _x, _y, _z, _Level, _TotalHits)
AND
_TotalHits > 0
AND
IntegerSubtract(_TotalHits, 1, _Next)
AND
CharacterGetHostCharacter(_Host)
THEN
NOT DB_LLENEMY_Rewards_Temp_DefeatedGoblin(_Goblin, _x, _y, _z, _Level, _TotalHits);
DB_LLENEMY_Rewards_Temp_DefeatedGoblin(_Goblin, _x, _y, _z, _Level, _Next);
LLENEMY_TreasureGoblins_SpawnLoot(_Host, _x, _y, _z, _Level);
ProcObjectTimer(_Goblin, "Timers_LLENEMY_TreasureGoblins_SpawnDefeatedLoot", 25);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Goblin, "Timers_LLENEMY_TreasureGoblins_SpawnDefeatedLoot")
AND
DB_LLENEMY_Rewards_Temp_DefeatedGoblin(_Goblin, _x, _y, _z, _Level, _TotalHits)
AND
_TotalHits <= 0
THEN
NOT DB_LLENEMY_Rewards_Temp_DefeatedGoblin(_Goblin, _x, _y, _z, _Level, _TotalHits);
//END_REGION

//REGION TOGGLING_SCRIPT
PROC
LLENEMY_Rewards_TreasureGoblin_ToggleScript(1)
AND
NOT LeaderLib_ToggleScripts_QRY_ScriptIsEnabled("LLENEMY_TreasureGoblin_Active")
THEN
LeaderLib_ToggleScripts_EnableScript("LLENEMY_TreasureGoblin_Active", "EnemyUpgradeOverhaul");

PROC
LLENEMY_Rewards_TreasureGoblin_ToggleScript(0)
AND
NOT DB_LLENEMY_TreasureGoblins_Temp_Active(_)
THEN
LeaderLib_ToggleScripts_DisableScript("LLENEMY_TreasureGoblin_Active", "EnemyUpgradeOverhaul");
//END_REGION
EXITSECTION
ENDEXITSECTION
ParentTargetEdge "LaughingLeader_EnemyUpgradeOverhaul"