Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLENEMY_Duplication_InitSettings();
KBSECTION
//REGION SETTINGS
PROC
LLENEMY_Duplication_InitSettings()
THEN
LLENEMY_Upgrades_AddGroup("Duplication", "LLENEMY_DuplicationUpgradesDisabled", "LLENEMY_DuplicationRolled", "LLENEMY_DuplicationUpgradeAdded");

LLENEMY_Upgrades_AddType("Duplication", "Elite", 1, 30, 8);
LLENEMY_Upgrades_AddType("Duplication", "Normal", 750, 800, 5);

PROC
LLENEMY_Upgrades_Register_TypeUpgrades("Duplication", "Elite")
THEN
LLENEMY_Upgrades_AddStatus("Duplication", "Elite", "LLENEMY_DUPE_ELITE_SINGLE", 949, 8);
LLENEMY_Upgrades_AddStatus("Duplication", "Elite", "LLENEMY_DUPE_ELITE_DOUBLE", 49, 14);

PROC
LLENEMY_Upgrades_Register_TypeUpgrades("Duplication", "Normal")
THEN
LLENEMY_Upgrades_AddStatus("Duplication", "Normal", "LLENEMY_DUPE_NORMAL_WEAKEST", 499, 2);
LLENEMY_Upgrades_AddStatus("Duplication", "Normal", "LLENEMY_DUPE_NORMAL_WEAK", 299, 4);
LLENEMY_Upgrades_AddStatus("Duplication", "Normal", "LLENEMY_DUPE_NORMAL_SAME", 199, 6);
//END_REGION

//REGION DUPLICANTS
QRY
LLENEMY_Duplication_QRY_CanDuplicant((CHARACTERGUID)_Char, 1)
AND
GlobalGetFlag("LLENEMY_DuplicationUpgrades_BossesDisabled", 0)
THEN
DB_NOOP(1);

QRY
LLENEMY_Duplication_QRY_CanDuplicant((CHARACTERGUID)_Char, 0)
THEN
DB_NOOP(1);

PROC
LLENEMY_Upgrades_CanRollForGroupUpgrade((CHARACTERGUID)_Enemy, "Duplication", (STRING)_Type)
AND
IsBoss(_Enemy, _IsBoss)
AND
LLENEMY_Duplication_QRY_CanDuplicant(_Enemy, _IsBoss)
AND
DB_LLENEMY_Duplication_Temp_Active(_Enemy, _Dupe, _Region)
THEN
DB_LLENEMY_StatusUpgradeBlocked(_Enemy, "Duplication", _Type);

PROC
LLENEMY_Duplication_CreateDuplicant((CHARACTERGUID)_Source, (STRING)_Stats)
THEN
LLENEMY_Duplication_CreateDuplicant(_Source, _Stats, 0, 0, 0);

PROC
LLENEMY_Duplication_CreateDuplicant((CHARACTERGUID)_Source, (STRING)_Stats, (INTEGER)_CopyAttributes, (INTEGER)_CopyAbilities, (INTEGER)_ChallengePoints)
AND
DB_CurrentLevel(_Region)
AND
CharacterCreateOutOfSightToObject("LLENEMY_Dupe_A_54ad4e06-b57f-46d0-90fc-5da1208250e0", _Source, _Source, 0, "", _Dupe)
AND
GetFaction(_Source, _Faction)
THEN
CharacterTransformFromCharacter(_Dupe, _Source, 0, 1, 0, 1, 1, 0, 0);
/* [OSITOOLS_ONLY]
LeaderLib_Tags_PreserveTag(_Dupe, "LLENEMY_UpgradesDisabled");
LeaderLib_Timers_StartCharacterCharacterTimer(_Dupe, _Source, 1000, "Timers_LLENEMY_Duplication_CopyStatuses", "LLENEMY_Duplication_CopyStatuses");
*/
// [BEGIN_NO_OSITOOLS]
ClearTag(_Dupe, "LLENEMY_UpgradesDisabled");
// [END_NO_OSITOOLS]
//SetTag(_Dupe, "LLENEMY_Duplicant");
LeaderLib_Tags_PreserveTag(_Dupe, "LLENEMY_Duplicant");
SetFaction(_Dupe, _Faction);
//ChangeAttitude(_Source, _Dupe, 200);
//ChangeAttitude(_Dupe, _Source, 200);
SetVarFixedString(_Dupe, "LLENEMY_Dupe_Stats", _Stats);
SetVarInteger(_Dupe, "LLENEMY_ChallengePoints", _ChallengePoints);
DB_LLENEMY_Duplication_Temp_Active(_Source, _Dupe, _Region);
DB_LLENEMY_Duplication_Temp_CopySettings(_Source, _Dupe, _CopyAttributes, _CopyAbilities);
LLENEMY_Duplication_OnDuplicantCreated(_Source, _Dupe);
LeaderLib_Timers_StartCharacterCharacterTimer(_Dupe, _Source, 250, "Timers_LLENEMY_Duplication_CopyAppearance", "LLENEMY_Duplication_CopyAppearance");

IF
CharacterCharacterEvent(_Dupe, _Source, "LLENEMY_Duplication_CopyAppearance")
THEN
CharacterTransformAppearanceTo(_Dupe, _Source, 1, 1);
CharacterCharacterSetEvent(_Source, _Dupe, "LLENEMY_Dupe_ApplyStats");

IF
CharacterCharacterEvent(_Dupe, _Source, "LLENEMY_Dupe_StatsApplied")
AND
CharacterGetLevel(_Source, _Level)
THEN
CharacterLevelUpTo(_Dupe, _Level);

QRY
LLENEMY_Duplication_QRY_IgnoreStatus((STRING)_Status)
AND
DB_LLENEMY_Upgrades_Statuses("Duplication", _Type, _Status, _Start, _End, _Duration, _CP)
THEN
DB_NOOP(1);

/* [OSITOOLS_ONLY]
IF
CharacterCharacterEvent(_Dupe, _Source, "LLENEMY_Duplication_CopyAppearance")
THEN
NRD_LuaCall("LLENEMY_Ext_ClearGain", (STRING)_Dupe);

IF
CharacterCharacterEvent(_Dupe, _Source, "LLENEMY_Duplication_CopyStatuses")
THEN
NRD_IterateStatuses(_Source, "LLENEMY_Dupe_CopyStatus");

IF
NRD_StatusIteratorEvent("LLENEMY_Dupe_CopyStatus", (CHARACTERGUID)_Source, _Status, _Handle)
AND
NOT LLENEMY_Duplication_QRY_IgnoreStatus(_Status)
AND
DB_LLENEMY_Duplication_Temp_Active(_Source, _Dupe, _Region)
//NRD_StatusGetInt(_Source, _Handle, "ForceStatus", _Forced)
AND
NRD_StatusGetReal(_Source, _Handle, "CurrentLifeTime", _Duration)
AND
NRD_StatusGetGuidString(_Source, _Handle, "StatusSourceHandle", _StatusSource)
THEN
LLENEMY_Duplication_CopyStatus(_Dupe, _Status, _Duration, _StatusSource);
*/

PROC
LLENEMY_Duplication_CopyStatus((CHARACTERGUID)_Dupe, (STRING)_Status, (REAL)_Duration, (GUIDSTRING)_StatusSource)
AND
_Duration > 0.0
AND
RealSum(_Duration, 0.1, _ExtendedDuration)
THEN
ApplyStatus(_Dupe, _Status, _ExtendedDuration, 1, _StatusSource);

PROC
LLENEMY_Duplication_CopyStatus((CHARACTERGUID)_Dupe, (STRING)_Status, (REAL)_Duration, (GUIDSTRING)_StatusSource)
AND
_Duration < 0.0
THEN
ApplyStatus(_Dupe, _Status, _Duration, 1, _StatusSource);

IF
CharacterCharacterEvent(_Source, _Dupe, "LLENEMY_Dupe_StatsApplied")
AND
DB_LLENEMY_Duplication_Temp_CopySettings(_Source, _Dupe, _CopyAttributes, _CopyAbilities)
THEN
NOT DB_LLENEMY_Duplication_Temp_CopySettings(_Source, _Dupe, _CopyAttributes, _CopyAbilities);
LLENEMY_Duplication_SetupDuplicant(_Source, _Dupe, _CopyAttributes, _CopyAbilities);

IF
CharacterCharacterEvent(_Source, _Dupe, "LLENEMY_Dupe_StatsApplied")
THEN
TeleportTo(_Dupe, _Source, "LLENEMY_DupeCharacterTeleported", 1, 1, 0);
CharacterSetFollowCharacter(_Dupe, _Source);
PlayEffect(_Dupe, "RS3_FX_GP_ScriptedEvent_Teleport_GenericSmoke_01");

IF
CharacterCharacterEvent(_Source, _Dupe, "LLENEMY_Dupe_StatsApplied")
AND
CharacterGetDisplayName(_Source, _, _Name)
AND
StringConcatenate(_Name, " (Shadow)", _DupeName)
THEN
CharacterSetCustomName(_Dupe, _DupeName);

PROC
LLENEMY_Duplication_SetupDuplicant((CHARACTERGUID)_Source, (CHARACTERGUID)_Dupe, 1, (INTEGER)_CopyAbilities)
THEN
LeaderLib_Helper_CopyAttributes(_Dupe, _Source);

PROC
LLENEMY_Duplication_SetupDuplicant((CHARACTERGUID)_Source, (CHARACTERGUID)_Dupe, (INTEGER)_CopyAttributes, 1)
THEN
LeaderLib_Helper_CopyAbilities(_Dupe, _Source);

PROC
LLENEMY_Duplication_SetupDuplicant((CHARACTERGUID)_Source, (CHARACTERGUID)_Dupe, (INTEGER)_CopyAttributes, (INTEGER)_CopyAbilities)
THEN
LeaderLib_Helper_CopyLevel(_Dupe, _Source);
/* [OSITOOLS_ONLY]
NRD_CharacterIterateSkills(_Source, "LLENEMY_Dupe_CopySkill");

IF
NRD_SkillIteratorEvent("LLENEMY_Dupe_CopySkill", _Source, _Skill, _IsLearned, _IsActivated)
AND
DB_LLENEMY_Duplication_Temp_Active(_Source, _Dupe, _Region)
THEN
CharacterAddSkill(_Dupe, _Skill, 0);
*/
//END_REGION

//REGION DUPE_STATUS_APPLIED
IF
CharacterStatusApplied(_Char, "LLENEMY_DUPE_ELITE_SINGLE", _)
AND
DB_LLENEMY_Upgrades_Statuses(_Group, _Type, "LLENEMY_DUPE_ELITE_SINGLE", _StartInt, _EndInt, _Duration, _ChallengePoints)
THEN
LLENEMY_Duplication_CreateDuplicant(_Char, "LLENEMY_Dupe_Elite_A", 1, 1, _ChallengePoints);

IF
CharacterStatusApplied(_Char, "LLENEMY_DUPE_ELITE_DOUBLE", _)
AND
DB_LLENEMY_Upgrades_Statuses(_Group, _Type, "LLENEMY_DUPE_ELITE_DOUBLE", _StartInt, _EndInt, _Duration, _ChallengePoints)
THEN
LLENEMY_Duplication_CreateDuplicant(_Char, "LLENEMY_Dupe_Elite_A", 1, 1, _ChallengePoints);
LLENEMY_Duplication_CreateDuplicant(_Char, "LLENEMY_Dupe_Elite_A", 1, 1, _ChallengePoints);

IF
CharacterStatusApplied(_Char, "LLENEMY_DUPE_NORMAL_SAME", _)
AND
DB_LLENEMY_Upgrades_Statuses(_Group, _Type, "LLENEMY_DUPE_NORMAL_SAME", _StartInt, _EndInt, _Duration, _ChallengePoints)
THEN
LLENEMY_Duplication_CreateDuplicant(_Char, "LLENEMY_Dupe_Normal_A", 1, 1, _ChallengePoints);

IF
CharacterStatusApplied(_Char, "LLENEMY_DUPE_NORMAL_WEAK", _)
AND
DB_LLENEMY_Upgrades_Statuses(_Group, _Type, "LLENEMY_DUPE_NORMAL_WEAK", _StartInt, _EndInt, _Duration, _ChallengePoints)
THEN
LLENEMY_Duplication_CreateDuplicant(_Char, "LLENEMY_Dupe_Normal_Weak", 0, 1, _ChallengePoints);

IF
CharacterStatusApplied(_Char, "LLENEMY_DUPE_NORMAL_WEAKEST", _)
AND
DB_LLENEMY_Upgrades_Statuses(_Group, _Type, "LLENEMY_DUPE_NORMAL_WEAKEST", _StartInt, _EndInt, _Duration, _ChallengePoints)
THEN
LLENEMY_Duplication_CreateDuplicant(_Char, "LLENEMY_Dupe_Normal_Weakest", 0, 1, _ChallengePoints);
//END_REGION

//REGION DUPE_ARENA
PROC
LLENEMY_Duplication_OnDuplicantCreated((CHARACTERGUID)_Source, (CHARACTERGUID)_Duplicant)
AND
//DB_ArenaPresets_Mobs(_Arena, _Source, _Trigger)
DB_Arena_MobParticipants(_Inst, _Source, _Trig, _Team)
THEN
DB_Arena_MobParticipants(_Inst, _Duplicant, _Trig, _Team);
//END_REGION

//REGION CLEANUP
IF
StoryEvent((CHARACTERGUID)_Dupe, "LLENEMY_Dupe_OnDupeDying")
AND
DB_LLENEMY_Duplication_Temp_Active(_Enemy, _Dupe, _Region)
THEN
NOT DB_LLENEMY_Duplication_Temp_Active(_Enemy, _Dupe, _Region);
LeaderLib_Tags_ClearAllPreservedTags(_Dupe);

IF
RegionEnded(_Region)
AND
DB_LLENEMY_Duplication_Temp_Active(_Enemy, _Dupe, _Region)
THEN
NOT DB_LLENEMY_Duplication_Temp_Active(_Enemy, _Dupe, _Region);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_EnemyUpgradeOverhaul"