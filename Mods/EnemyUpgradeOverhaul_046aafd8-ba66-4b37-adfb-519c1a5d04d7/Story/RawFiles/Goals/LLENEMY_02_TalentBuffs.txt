Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLENEMY_Talents_InitSettings();
KBSECTION
//REGION SETTINGS
PROC
LLENEMY_Talents_InitSettings()
THEN
LLENEMY_Upgrades_AddGroup("Talents", "LLENEMY_TalentUpgradesDisabled", "LLENEMY_TalentUpgradeRolled", "LLENEMY_TalentUpgradeAdded");
LLENEMY_Upgrades_AddType("Talents", "Elite", 1, 99, 8);
LLENEMY_Upgrades_AddType("Talents", "Normal", 360, 499, 5);
LLENEMY_Upgrades_AddType("Talents", "Weapon", 50, 600, 4);

LLENEMY_Upgrades_AddStatus("Talents", "Elite", "LLENEMY_TALENT_LIGHTNINGROD", 260, 4);
LLENEMY_Upgrades_AddStatus("Talents", "Elite", "LLENEMY_TALENT_LONEWOLF", 100, 12);
LLENEMY_Upgrades_AddStatus("Talents", "Elite", "LLENEMY_TALENT_RESISTDEAD", 50, 8);
LLENEMY_Upgrades_AddStatus("Talents", "Elite", "LLENEMY_TALENT_RESISTDEAD2", 20, 10);
LLENEMY_Upgrades_AddStatus("Talents", "Elite", "LLENEMY_TALENT_TORTURER", 259, 4);
LLENEMY_Upgrades_AddStatus("Talents", "Elite", "LLENEMY_TALENT_UNSTABLE", 70, 5);
LLENEMY_Upgrades_AddStatus("Talents", "Elite", "LLENEMY_TALENT_WHATARUSH", 240, 6);

LLENEMY_Upgrades_AddStatus("Talents", "Normal", "LLENEMY_TALENT_LEECH", 399, 2);
LLENEMY_Upgrades_AddStatus("Talents", "Normal", "LLENEMY_TALENT_QUICKSTEP", 500, 4);
LLENEMY_Upgrades_AddStatus("Talents", "Normal", "LLENEMY_TALENT_NATURALCONDUCTOR", 100, 4);

LLENEMY_Upgrades_AddStatus("Talents", "Weapon", "LLENEMY_TALENT_RANGERRANGE", 500, 3);
LLENEMY_Upgrades_AddStatus("Talents", "Weapon", "LLENEMY_TALENT_BACKSTAB", 499, 4);
//END_REGION

//REGION WEAPON_TALENT_ROLLING
PROC
LLENEMY_Upgrades_CanRollForGroupUpgrade((CHARACTERGUID)_Enemy, "Talents", "Weapon")
THEN
DB_LLENEMY_StatusUpgradeBlocked(_Enemy, "Talents", "Weapon");

PROC
LLENEMY_Upgrades_RollForStatusUpgrade((CHARACTERGUID)_Enemy, "Talents", "Weapon", (STRING)_GroupSuccessFlag, (STRING)_Name)
AND
NOT DB_LLENEMY_Talents_Temp_WeaponTalentAdded(_Enemy)
AND
CharacterGetEquippedWeapon(_Enemy, (ITEMGUID)_Weapon)
AND
LeaderLib_Helper_QRY_IsNonMagicalRangedWeapon(_Weapon)
AND
LeaderLib_Random_QRY(999)
AND
DB_LeaderLib_Random(_Roll)
AND
LLENEMY_Upgrades_QRY_Internal_CheckForTypeCriticalFailure(_Enemy, "Talents", "Weapon", _Roll)
AND
DB_LLENEMY_Upgrades_Statuses(_Group, _Type, "LLENEMY_TALENT_RANGERRANGE", _MinRoll, _MaxRoll, _Duration, _ChallengePoints)
AND
_Roll <= _MaxRoll
AND
_Roll >= _MinRoll
THEN
NOT DB_LeaderLib_Random(_Roll);
LeaderLog_Log("DEBUG", "[LLENEMY:Talents:RollForStatusUpgrade] Roll successful for weapon talent status [LLENEMY_TALENT_RANGERRANGE]. Applying to (",_Name,").");
LLENEMY_Upgrades_ApplyUpgrade(_Enemy, "LLENEMY_TALENT_RANGERRANGE", _Duration, _ChallengePoints);
DB_LLENEMY_Talents_Temp_WeaponTalentAdded(_Enemy);

PROC
LLENEMY_Upgrades_RollForStatusUpgrade((CHARACTERGUID)_Enemy, "Talents", "Weapon", (STRING)_GroupSuccessFlag, (STRING)_Name)
AND
NOT DB_LLENEMY_Talents_Temp_WeaponTalentAdded(_Enemy)
AND
CharacterGetEquippedWeapon(_Enemy, (ITEMGUID)_Weapon)
AND
GetTemplate(_Weapon, _Template)
AND
StringContains(_Template, "_Dagger_", 0)
AND
LeaderLib_Random_QRY(999)
AND
DB_LeaderLib_Random(_Roll)
AND
LLENEMY_Upgrades_QRY_Internal_CheckForTypeCriticalFailure(_Enemy, "Talents", "Weapon", _Roll)
AND
DB_LLENEMY_Upgrades_Statuses(_Group, _Type, "LLENEMY_TALENT_BACKSTAB", _MinRoll, _MaxRoll, _Duration, _ChallengePoints)
AND
_Roll <= _MaxRoll
AND
_Roll >= _MinRoll
THEN
NOT DB_LeaderLib_Random(_Roll);
LeaderLog_Log("DEBUG", "[LLENEMY:Talents:RollForStatusUpgrade] Roll successful for weapon talent status [LLENEMY_TALENT_BACKSTAB]. Applying to (",_Name,").");
LLENEMY_Upgrades_ApplyUpgrade(_Enemy, "LLENEMY_TALENT_BACKSTAB", _Duration, _ChallengePoints);
DB_LLENEMY_Talents_Temp_WeaponTalentAdded(_Enemy);

PROC
LLENEMY_Upgrades_RollForStatusUpgrade((CHARACTERGUID)_Enemy, "Talents", "Weapon", (STRING)_GroupSuccessFlag, (STRING)_Name)
AND
DB_LLENEMY_Talents_Temp_WeaponTalentAdded(_Enemy)
THEN
NOT DB_LLENEMY_Talents_Temp_WeaponTalentAdded(_Enemy);
//END_REGION

//REGION TALENT_WORKAROUNDS
IF
CharacterPrecogDying(_Enemy)
AND
HasActiveStatus(_Enemy, "LLENEMY_TALENT_RESISTDEAD", 1)
THEN
DB_LLENEMY_Talents_Temp_ReviveNext(_Enemy, 20);

IF
CharacterPrecogDying(_Enemy)
AND
HasActiveStatus(_Enemy, "LLENEMY_TALENT_RESISTDEAD2", 1)
THEN
DB_LLENEMY_Talents_Temp_ReviveNext(_Enemy, 100);

IF
CharacterDied(_Enemy)
AND
DB_LLENEMY_Talents_Temp_ReviveNext(_Enemy, 20)
THEN
//20% health resurrection
PlayEffect(_Enemy, "LLENEMY_FX_Status_ComebackKid_Resurrect_01");
LeaderLib_Skills_UseSkillOnTarget(_Enemy, _Enemy, "Target_EnemyResurrect", 0, 0);

IF
CharacterDied(_Enemy)
AND
DB_LLENEMY_Talents_Temp_ReviveNext(_Enemy, 100)
THEN
PlayEffect(_Enemy, "LLENEMY_FX_Status_ComebackKid_Resurrect_01");
CharacterResurrect(_Enemy);

IF
CharacterStatusRemoved(_Enemy, "RESURRECT", _)
AND
DB_LLENEMY_Talents_Temp_ReviveNext(_Enemy, _Amount)
THEN
NOT DB_LLENEMY_Talents_Temp_ReviveNext(_Enemy, _Amount);
//Reroll buffs! Let the evil floowwwww.
LLENEMY_Upgrades_ClearFlags(_Enemy);
LLENEMY_Upgrades_RollForUpgrades(_Enemy);
//END_REGION

//REGION LEVELING_TALENT_BELTS
IF
CharacterStatusApplied(_Enemy, _Status, _)
AND
DB_LLENEMY_Upgrades_Statuses("Talents", _Type, _Status, _MinRoll, _MaxRoll, _Duration, _ChallengePoints)
THEN
LLENEMY_Talents_LevelUpTalentItems(_Enemy);

PROC
LLENEMY_Talents_LevelUpTalentItems((CHARACTERGUID)_Enemy)
AND
CharacterGetEquippedItem(_Enemy, "Belt", (ITEMGUID)_Belt)
AND
CharacterGetLevel(_Enemy, _Level)
THEN
ItemLevelUpTo(_Belt, _Level);
DB_LLENEMY_Talents_Temp_DeleteItem(_Enemy, _Belt);

PROC
LLENEMY_Talents_LevelUpTalentItems((CHARACTERGUID)_Enemy)
AND
CharacterGetEquippedItem(_Enemy, "Ring", (ITEMGUID)_Ring)
AND
CharacterGetLevel(_Enemy, _Level)
THEN
ItemLevelUpTo(_Ring, _Level);
DB_LLENEMY_Talents_Temp_DeleteItem(_Enemy, _Ring);

PROC
LLENEMY_Talents_LevelUpTalentItems((CHARACTERGUID)_Enemy)
AND
CharacterGetEquippedItem(_Enemy, "Ring2", (ITEMGUID)_Ring)
AND
CharacterGetLevel(_Enemy, _Level)
THEN
ItemLevelUpTo(_Ring, _Level);
DB_LLENEMY_Talents_Temp_DeleteItem(_Enemy, _Ring);

IF
CharacterDied(_Enemy)
AND
DB_LLENEMY_Talents_Temp_DeleteItem(_Enemy, _Item)
AND
ObjectExists(_Item, 1)
THEN
ItemRemove(_Item);

IF
CharacterDied(_Enemy)
AND
DB_LLENEMY_Talents_Temp_DeleteItem(_Enemy, _Item)
THEN
NOT DB_LLENEMY_Talents_Temp_DeleteItem(_Enemy, _Item);
//END_REGION

//REGION TALENT_IMPLEMENTS
IF
CharacterStatusApplied(_Character, "SurfaceEnter", _)
AND
HasActiveStatus(_Character, "LLENEMY_TALENT_NATURALCONDUCTOR", 1)
AND
LLENEMY_QRY_IsInElectrifiedSurface(_Character)
THEN
ApplyStatus(_Character, "HASTED", 6.0, 0, _Character);

QRY
LLENEMY_QRY_IsInElectrifiedSurface((CHARACTERGUID)_Character)
AND
GetSurfaceGroundAt(_Character, _Surface)
AND
StringContains(_Surface, "Electrified", 1)
THEN
DB_NOOP(1);

QRY
LLENEMY_QRY_IsInElectrifiedSurface((CHARACTERGUID)_Character)
AND
GetSurfaceCloudAt(_Character, _Surface)
AND
StringContains(_Surface, "Electrified", 1)
THEN
DB_NOOP(1);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_EnemyUpgradeOverhaul"