Version 1
SubGoalCombiner SGC_AND
INITSECTION
LeaderUpdater_Register_Mod("EnemyUpgradeOverhaul", "LaughingLeader", 1,5,0,0);
LeaderUpdater_Register_ActiveGoal("EnemyUpgradeOverhaul", "LaughingLeader", "LLENEMY_ZZZ_Updater");
LeaderLib_Register_ModMenu("EnemyUpgradeOverhaul.Settings", "[Enemy Upgrade Overhaul] Settings", "LLENEMY_Settings", "EnemyUpgradeOverhaul", "LaughingLeader");
GlobalSetFlag("LLENEMY_DuplicationUpgradesDisabled"); // Opt-in

KBSECTION
IF
GameStarted(_Level, _)
AND
IsGameLevel(_Level, 1)
AND
LeaderUpdater_QRY_ModUpdateNeeded("EnemyUpgradeOverhaul", "LaughingLeader", 1,5,0,0)
THEN
LeaderUpdater_Register_Mod("EnemyUpgradeOverhaul", "LaughingLeader", 1,5,0,0);

PROC
LeaderUpdater_ModUpdated("EnemyUpgradeOverhaul", "LaughingLeader", (STRING)_OldVersion, (STRING)_NewVersion)
THEN
DB_NOOP(1);

//REGION DEBUG
IF
TextEventSet("llenemy_printall")
THEN
LLENEMY_Debug_PrintAllEntries();

PROC
LLENEMY_Debug_PrintAllEntries()
THEN
NRD_DebugLog("[LLENEMY_00_UpgradesMain:] Printing all groups/types.");

PROC
LLENEMY_Debug_PrintAllEntries()
AND
DB_LLENEMY_Upgrades_TypeRollValues(_Group, _Type, _StartInt, _RollMaxInt)
AND
IntegertoString(_StartInt, _StartIntStr)
AND
IntegertoString(_RollMaxInt, _RollMaxIntStr)
THEN
LeaderLog_Log("DEBUG", "[DB_LLENEMY_Upgrades_TypeRollValues] Group(", _Group, ") Type(", _Type, ") AddStart(",_StartIntStr,") RollMax(",_RollMaxIntStr, ")");

PROC
LLENEMY_Debug_PrintAllEntries()
AND
DB_LLENEMY_Upgrades_Statuses(_Group, _Type, _Status, _StartInt, _EndInt, _Duration, _ChallengePoints)
AND
IntegertoString(_StartInt, _StartIntStr)
AND
IntegertoString(_EndInt, _EndIntStr)
THEN
LeaderLog_Log("DEBUG", "[DB_LLENEMY_Upgrades_Statuses] Group(", _Group, ") Type(", _Type, ") Status(",_Status,") Start(",_StartIntStr,") End(",_EndIntStr, ")");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_EnemyUpgradeOverhaul"